import Head from "next/head";
import { useState, useEffect } from "react";
import {
	BsPlus,
	BsSearch,
	BsEyeFill,
	BsBookmarkFill,
	BsFillArrowLeftSquareFill,
	BsPeopleFill,
	BsTerminalFill,
	BsFillArrowRightSquareFill,
} from "react-icons/bs";

import { AiFillFire, AiFillMessage } from "react-icons/ai";
import { IoMdArrowRoundUp } from "react-icons/io";
import { MdNightlightRound, MdFeedback } from "react-icons/md";
import { FaCog } from "react-icons/fa";

import { motion, useAnimation } from "framer-motion";

const data = [
	{
		name: "Discover",
		items: [
			{
				title: "Popular",
				icon: AiFillFire,
			},
			{
				title: "Most Upvoted",
				icon: IoMdArrowRoundUp,
			},
			{
				title: "Best Discussions",
				icon: AiFillMessage,
			},
			{
				title: "Search",
				icon: BsSearch,
			},
		],
	},
	{
		name: "Manage",
		items: [
			{
				title: "Bookmarks",
				icon: BsBookmarkFill,
			},
			{
				title: "Reading history",
				icon: BsEyeFill,
			},
			{
				title: "Focus Mode",
				icon: MdNightlightRound,
			},
			{
				title: "Customize",
				icon: FaCog,
			},
		],
	},
];

const datafooter = [
	{
		name: "Account",
		items: [
			{
				title: "Setting",
				icon: BsBookmarkFill,
			},
			{
				title: "Logout",
				icon: BsTerminalFill,
			},
		],
	},
];

export default function Home() {
	const [active, setActive] = useState(false);
	const controls = useAnimation();
	const controlText = useAnimation();
	const controlTitleText = useAnimation();

	const showMore = () => {
		controls.start({
			width: "250px",
			transition: { duration: 0.001 },
		});
		controlText.start({
			opacity: 1,
			display: "block",
			transition: { delay: 0.3 },
		});
		controlTitleText.start({
			opacity: 1,
			transition: { delay: 0.3 },
		});

		setActive(true);
	};

	const showLess = () => {
		controls.start({
			width: "55px",
			transition: { duration: 0.001 },
		});

		controlText.start({
			opacity: 0,
			display: "none",
		});

		controlTitleText.start({
			opacity: 0,
		});

		setActive(false);
	};

	useEffect(() => {
		showMore();
	}, []);

	return (
		<div className="min-h-screen bg-black">
			<Head>
				<title>Sidebar</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<motion.div
				animate={controls}
				className="animate  group relative flex min-h-screen max-w-[250px] flex-col border-r border-gray-700 py-10 duration-300"
			>
				{active && (
					<BsFillArrowLeftSquareFill
						onClick={showLess}
						className="absolute -right-4 top-10 hidden cursor-pointer text-2xl text-white group-hover:block "
					/>
				)}
				{!active && (
					<BsFillArrowRightSquareFill
						onClick={showMore}
						className="absolute -right-4 top-10 cursor-pointer text-2xl text-white"
					/>
				)}

				<div
					className={`${
						active &&
						"rounded-lg border border-green-400 px-4 shadow-lg shadow-green-400/60"
					}   mx-2 mb-4 flex h-[120px] max-w-[220px]  flex-col justify-center`}
				>
					<motion.p
						animate={controlText}
						className="text-md font-thin text-white"
					>
						Get the content you need by creating a personal feed
					</motion.p>
					<button className="my-2 flex w-full items-center justify-center rounded-lg bg-green-400 py-2 font-bold text-black">
						<BsPlus className="text-2xl" />
						<motion.p animate={controlText}>
							Create me feed
						</motion.p>
					</button>
				</div>

				<div className="grow">
					{data.map((group, index) => (
						<div key={index} className="my-2">
							<motion.p
								animate={controlTitleText}
								className="mb-2 ml-4 text-sm font-bold text-gray-500"
							>
								{group.name}
							</motion.p>

							{group.items.map((item, index2) => (
								<div
									key={index2}
									className="flex cursor-pointer px-4 py-1"
								>
									<item.icon className="text-lg text-gray-500" />
									<motion.p
										animate={controlText}
										className="ml-4 text-sm font-bold text-gray-400"
									>
										{" "}
										{item.title}
									</motion.p>
								</div>
							))}
						</div>
					))}
				</div>

				<div>
					{datafooter.map((group, index) => (
						<div key={index} className="my-2">
							<motion.p
								animate={controlTitleText}
								className="mb-2 ml-4 text-sm font-bold text-gray-500"
							>
								{group.name}
							</motion.p>

							{group.items.map((item, index2) => (
								<div
									key={index2}
									className="flex cursor-pointer px-4 py-1"
								>
									<item.icon className="text-lg text-gray-500" />
									<motion.p
										animate={controlText}
										className="ml-4 text-sm font-bold text-gray-400"
									>
										{" "}
										{item.title}
									</motion.p>
								</div>
							))}
						</div>
					))}
				</div>
			</motion.div>
		</div>
	);
}
